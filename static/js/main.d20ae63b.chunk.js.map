{"version":3,"sources":["index.js"],"names":["Pin","props","className","id","style","coordonnees","x","y","viewBox","fill","xmlns","d","Board","state","this","clickCoordinate","boundingMap","left","top","event","el","newCoo","pageX","pageY","right","bottom","setState","pin","haveClicked","calculateCoordinate","onClick","handleClick","ref","boundingIsInit","rect","getBoundingClientRect","bound","window","scrollY","scrollX","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"sOAIA,SAASA,EAAIC,GACL,OACI,yBACIC,UAAU,MACVC,GAAG,MACHC,MAAO,CACH,WAAcH,EAAMI,YAAYC,EAAI,GACpC,UAAaL,EAAMI,YAAYE,EAAI,KAGvC,yBACIL,UAAU,YACVE,MAAO,CACH,MAAS,GACT,OAAU,IAEdI,QAAQ,YACRC,KAAK,eACLC,MAAM,8BAEN,0BAAMC,EAAE,uCACR,0BAAMA,EAAE,mC,IAOtBC,E,kDAEF,WAAaX,GAAQ,IAAD,8BAEhB,cAAMA,IACDY,MAAQ,CAET,gBAAmB,CACf,EAAK,KACL,EAAK,MAET,aAAgB,EAEhB,YAAe,CACX,IAAO,KACP,OAAU,KACV,MAAS,KACT,KAAQ,MAGZ,gBAAkB,GAlBN,E,kEA+BhB,MAAO,CAAE,EAHDC,KAAKD,MAAME,gBAAgBT,EAAIQ,KAAKD,MAAMG,YAAYC,KAG7C,EAFTH,KAAKD,MAAME,gBAAgBR,EAAIO,KAAKD,MAAMG,YAAYE,O,kCAMrDC,EAAOC,GAEhB,IAAMC,EAAS,CACX,EAAKF,EAAMG,MACX,EAAKH,EAAMI,OAGZF,EAAOf,EAAIQ,KAAKD,MAAMG,YAAYC,MAC9BI,EAAOf,EAAIQ,KAAKD,MAAMG,YAAYQ,OAClCH,EAAOd,EAAIO,KAAKD,MAAMG,YAAYE,KAClCG,EAAOd,EAAIO,KAAKD,MAAMG,YAAYS,QACjCX,KAAKY,SAAS,CAAE,gBAAmBL,EAAQ,aAAe,M,+BAK3D,IAAD,OAEFM,EAAO,WACP,GAAG,EAAKd,MAAMe,YACV,OACI,kBAAC5B,EAAD,CACIK,YAAe,EAAKwB,wBAJzB,GAUX,OACI,yBACI3B,UAAU,eACVC,GAAG,oBACH2B,QAAS,SAACX,GAAD,OAAW,EAAKY,YAAYZ,IACrCa,IAAK,SAACZ,GAIF,GAAKA,IAIM,EAAKP,MAAMoB,eAAe,CACjC,IAAMC,EAAOd,EAAGe,wBACVC,EAAQ,CACVlB,IAAKgB,EAAKhB,IAAMmB,OAAOC,QACvBb,OAAQS,EAAKT,OAASY,OAAOC,QAC7BrB,KAAMiB,EAAKjB,KAAOoB,OAAOE,QACzBf,MAAOU,EAAKV,MAAQa,OAAOE,SAE/B,EAAKb,SAAS,CACVV,YAAcoB,EACdH,gBAAiB,OAI/BN,O,GA5FMa,IAAMC,WAkG1B,SAASC,EAAIzC,GACL,OACI,yBAAKC,UAAU,mBACX,yBAAKA,UAAU,cACX,kBAACU,EAAD,QAMpB+B,IAASC,OACL,kBAACF,EAAD,MACAG,SAASC,eAAe,W","file":"static/js/main.d20ae63b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Pin(props){\n        return (\n            <div \n                className=\"pin\" \n                id=\"pin\"\n                style={{\n                    \"marginLeft\": props.coordonnees.x - 25,\n                    \"marginTop\": props.coordonnees.y - 51\n                }}\n            >\n                <svg \n                    className=\"bi bi-geo\" \n                    style={{\n                        \"width\": 51,\n                        \"height\": 51\n                    }} \n                    viewBox=\"0 0 16 11\" \n                    fill=\"currentColor\" \n                    xmlns=\"http://www.w3.org/2000/svg\" \n                >\n                    <path d=\"M11 4a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\"/>\n                    <path d=\"M7.5 4h1v9a.5.5 0 0 1-1 0V4z\"/>\n                </svg>\n            </div>\n            \n        );\n}\n\nclass Board extends React.Component {\n\n    constructor (props) {\n\n        super(props);\n        this.state = {\n            // Coordonnées de la souris lors du clic sur le bouton\n            \"clickCoordinate\": {\n                \"x\": null,\n                \"y\": null\n            },\n            \"haveClicked\" : false,\n            // Coordonnées du bouton en pixel géneral\n            \"boundingMap\": {\n                \"top\": null,\n                \"bottom\": null,\n                \"right\": null,\n                \"left\": null\n            },\n            // Si la bounding map a été initialisé\n            \"boundingIsInit\": false\n        };\n\n    }\n\n    calculateCoordinate(){\n        /** Calcule les coordonnées local du bouton avec ceux du general \n         * retourne un JSON avec x et y\n        */\n\n        let x = this.state.clickCoordinate.x - this.state.boundingMap.left\n        let y = this.state.clickCoordinate.y - this.state.boundingMap.top\n\n        return { \"x\": x, \"y\": y }\n\n    }\n\n    handleClick (event, el) {\n\n        const newCoo = {\n            \"x\": event.pageX,\n            \"y\": event.pageY\n        };\n\n        if(newCoo.x > this.state.boundingMap.left \n            && newCoo.x < this.state.boundingMap.right \n            && newCoo.y > this.state.boundingMap.top\n            && newCoo.y < this.state.boundingMap.bottom ) {\n                this.setState({ \"clickCoordinate\": newCoo, \"haveClicked\": true });\n        }\n\n    }\n\n    render () {\n\n        let pin = (() => {\n            if(this.state.haveClicked){\n                return (\n                    <Pin \n                        coordonnees = {this.calculateCoordinate()}\n                    />\n                );\n            }\n        })();\n\n        return (\n            <div\n                className=\"board-button\"\n                id=\"principale-button\"\n                onClick={(event) => this.handleClick(event)}\n                ref={(el) => {\n\n                    // El can be null \n                    // https://reactjs.org/docs/refs-and-the-dom.html#caveats-with-callback-refs\n                    if (!el) {\n\n                        return;\n\n                    } else if(!this.state.boundingIsInit){\n                        const rect = el.getBoundingClientRect();\n                        const bound = {\n                            top: rect.top + window.scrollY ,\n                            bottom: rect.bottom + window.scrollY,\n                            left: rect.left + window.scrollX,\n                            right: rect.right + window.scrollX\n                        }\n                        this.setState({ \n                            boundingMap : bound, \n                            boundingIsInit : true\n                        });\n                    }\n                }}\n            >{pin}</div>\n        );    \n    }\n\n}\n\nfunction App(props){\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}